# Assigned a fixed port to the dev services DB, so we can always connect to it with other tools without having to change their config
quarkus.datasource.devservices.port=52673
quarkus.datasource.devservices.volumes."D\:\\temp\\data"=/var/lib/mysql
quarkus.hibernate-orm.database.generation=update


#quarkus.smallrye-openapi.store-schema-directory=/api-docs
quarkus.rest-client.logging.scope=request-response
quarkus.rest-client.logging.body-limit=50
quarkus.log.category."org.jboss.resteasy.reactive.client.logging".level=DEBUG
quarkus.log.category."org.jboss.resteasy.reactive.server.handlers.ParameterHandler".level=DEBUG
#quarkus.oidc.client-id=backend-service
#quarkus.oidc.credentials.secret=secret
#quarkus.oidc.devui.grant.type=code
# Tell Dev Services for Keycloak to import the realm file
# This property is not effective when running the application in JVM or Native modes
#quarkus.keycloak.devservices.realm-path=quarkus-realm.json
#quarkus.keycloak.devservices.port=51956
#quarkus.oidc.authentication.session-age-extension=60M

# Generate container image on build
quarkus.container-image.build=true


# Messaging
#mp.messaging.incoming.text-validation-response.connector=smallrye-kafka
#mp.messaging.outgoing.text-validation.connector=smallrye-kafka
%prod.kafka.bootstrap.servers=redpanda-0:9092
%prod.quarkus.hibernate-orm.database.generation=drop-and-create


# LangChain4j


quarkus.langchain4j.openai.api-key=${OPEN_API_KEY}

#quarkus.langchain4j.huggingface.api-key=${HUGGING_FACE_API_KEY}
#quarkus.langchain4j.huggingface.chat-model.inference-endpoint-url=https://api-inference.huggingface.co/models/google/gemma-7b
#quarkus.langchain4j.huggingface.chat-model.return-full-text=false
#quarkus.langchain4j.huggingface.chat-model.log-requests=true